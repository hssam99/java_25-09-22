
public class InnerClass01 {

	public static void main(String[] args) {
		
		/*
		 * InnerClass : 내부 클래스
		 * 클래스 내부에 선언한 클래스
		 * 외부클래스가 쓰려고 직접 선언하는 경우가 많고, 다른 클래스에서
		 * 해당 내부 클래스를 사용할 일이 없고, 외부 클래스만이 사용하려고 할 때
		 * - 중첩 클래스 라고도 함.
		 * 
		 * 내부적으로 사용할 경우 클래스를 private으로 선언하고 사용하는 것을 권장
		 * 내부 클래스는 외부 클래스가 생성 된 후 생성됨.
		 * private이 아닌 내부 클래스는 외부에서 접근 가능함.
		 */
		
		OutClass outClass = new OutClass();
		System.out.println("내부 클래스 호출");
		outClass.usingInClass();
		
//		OutClass.
		
		
		
	}

}

class OutClass{
	private int num = 10;
	private static int sNum = 20;
	private InClass inClass; // outclass에서 inclass로 접근
	
	public OutClass() {
		// 외부클래스의 생성자로 내부 클래스의 객체 생성
		inClass = new InClass();
	}
	
	class InClass{
		// inclass는 outclass에서 사용하기 위해 만드므로 통상적으로 private 사용하지 않음
		int inNum = 100;
//		static int sinNum = 200; // 불가능. OutClass가 만들어져야 InClass를 사용할 수 있기 때문에.
		void inTest() {
			System.out.println("OutClass num =" + num);
			System.out.println("OutClass sNum =" + sNum);
			System.out.println("OutClass inNum =" + inNum);
		}
	}
	
	// InClass를 사용하기 위한 내부 메소드
	public void usingInClass() {
		inClass.inTest();
	}
}
