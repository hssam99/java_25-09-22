package f1_project;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class Constructor {
	
    private String constructorName;      // 팀 이름 (예: 페라리, 레드불)
    private int constructorCode;         // 팀 코드
    private List<Driver> driverList;     // 팀 내 드라이버 목록
    private int constructorPoint;        // 팀 점수 (드라이버 점수 합계)

    private Random random;

    
    
    // 생성자
    public Constructor(String constructorName, int constructorCode) {
        this.constructorName = constructorName;
        this.constructorCode = constructorCode;
        this.driverList = new ArrayList<>();
        this.constructorPoint = 0;
        this.random = new Random();
    }

    
    // 드라이버 추가 메소드
    public void addDriver(Driver driver) {
        driverList.add(driver);
    }
    

    // 팀 점수 계산: 팀 내 모든 드라이버들의 circuitPoint 합산
    public void calculateConstructorPoint() {
        int total = 0;
        for (Driver driver : driverList) {
            total += driver.getCircuitPoint();
        }
        this.constructorPoint = total;
    }

    
    
    // AI 드라이버 출발 속도 생성 (120 ~ 135 범위, 사용자 제외)
    public void generateAIStartSpeeds(Driver aiDriver) {
        for (Driver driver : driverList) {
            if (!driver.equals(aiDriver)) {
                int startSpeed = 120 + random.nextInt(16); // 120 ~ 135 사이 랜덤 값
//                driver.setStartSpeed(startSpeed);
            }
        }
    }
    
    
    
    // 특정 팀 소속 드라이버 목록 반환 (대소문자 구분 없이)
    public List<Driver> getDriversByConstructor(String constructorName) {
    		List<Driver> filteredDrivers = new ArrayList<>();
    		for (Driver d : driverList) {
    			if (((String) d.getConstructor()).equalsIgnoreCase(constructorName)) {
    				filteredDrivers.add(d);
    			}
    		}
    		return filteredDrivers;
    }

    // 각종 getter
    public String getConstructorName() {
        return constructorName;
    }

    public int getConstructorCode() {
        return constructorCode;
    }

    public List<Driver> getDriverList() {
        return driverList;
    }

    public int getConstructorPoint() {
        return constructorPoint;
    }

//    // 팀 정보 출력
//    public void printConstructorInfo() {
//        System.out.println("팀명: " + constructorName + " (코드: " + constructorCode + ")");
//        System.out.println("드라이버 목록:");
//        for (Driver d : driverList) {
//            System.out.println("- " + d.getDriverName() + ", 출발 속도: " + d.getStartSpeed());
//        }
//        System.out.println("총 점수: " + constructorPoint);
//    }

}
