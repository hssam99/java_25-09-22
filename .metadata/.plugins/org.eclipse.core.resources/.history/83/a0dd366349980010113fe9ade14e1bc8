package f1_project;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

public class ShanghaiController {
	CircuitController cc = new CircuitController();
	DotArtController dac = new DotArtController();
	GameController gc = new GameController();
	
	Scanner sc = new Scanner(System.in);
	Random random = new Random();
	
	private int circuitIndex;
	public Circuit shanghai;
	
	
	public ShanghaiController(Driver userDriver, int circuitNum) throws InterruptedException, IOException {
		this.circuitIndex=circuitNum;
		shanghai = cc.getCircuitList().get(circuitIndex);
	}
	
	
	
	public void introCircuit() throws InterruptedException {
		dac.printMonacoCircuitImage();
		System.out.print("entering Shanghai");
		gc.printLoadingDot();

		shanghai.printCircuitInfo();
		gc.printLoadingDot();
		System.out.print("Loading");
		gc.printLoadingDot();
		
		System.out.println("================================ GAME START ================================");
		System.out.println();
		
		
		String text1 = "오늘은 중국의 심장부, 상하이에서 열리는 포뮬러 원 상하이 그랑프리 현장에 나와 있습니다.";
		gc.printStringOnebyOne(text1);
		String text2 = "2004년 첫 개최 이후, 이곳은 거대한 규모로 전 세계 팬들의 이목을 사로잡아왔는데요.";
		gc.printStringOnebyOne(text2);
		System.out.println();
		String text3 = "상하이 서킷은 5.4km 길이의 독특한 드래곤 형태 레이아웃으로 유명합니다.";
		gc.printStringOnebyOne(text3);
		String text4 = "초고속 직선 구간과 긴 곡선 코너가 교차하며, 머신의 밸런스, 드라이버의 집중력을 동시에 시험하는 곳이죠.";
		gc.printStringOnebyOne(text4);
		System.out.println();
		String text5 = "특히 메인 스트레이트에서는 시속 320km/h 이상의 속도전이 펼쳐지며, 과감한 추월 드라마가 만들어집니다.";
		gc.printStringOnebyOne(text5);
		String text6 = "오늘도 수십만 관중이 함성을 보내는 가운데, 세계 최고의 드라이버들이 상하이의 도전에 맞섭니다!";
		gc.printStringOnebyOne(text6);
		System.out.println();
		String text7 = "잠시 후 시작될 상하이 그랑프리, 지금 바로 함께하시죠!";
		gc.printStringOnebyOne(text7);
		System.out.println();
		System.out.println("===========================================================================");
		System.out.println();
		System.out.println();
	}
	
	
	public void printCourse1() {
		System.out.println("====================== Course 1 : Casino Square =========================");
		System.out.println();
		String txt1 = "이제 드라이버들이 카지노 스퀘어로 향합니다!";
		gc.printStringOnebyOne(txt1);
		String txt2 = "모나코의 화려한 카지노를 스쳐 지나며, 도심의 고급스러운 풍경 속에서 레이스가 이어집니다.";
		gc.printStringOnebyOne(txt2);
		String txt3 = "넓은 공간이지만 순간적으로 라인을 잘못 잡으면, 바로 다음 미라보 코너 진입에 큰 영향을 주게 됩니다.";
		gc.printStringOnebyOne(txt3);
		String txt4 = "대략 120~150km/h으로 달리며 정확한 브레이킹과 스티어링, 침착함이 요구되는 구간입니다!";
		gc.printStringOnebyOne(txt4);
		System.out.println();
		System.out.println("=========================================================================");
		System.out.println();
		System.out.println();
	}
	
	public void printCourse2() {
		System.out.println("============================ Course 2 : Fairmont Hairpin  ============================");
		System.out.println();
		String txt1 = "내리막 Mirabeau 코너를 지나, 세계에서 가장 느린 코너! Fairmont Hairpin 입니다!";
		gc.printStringOnebyOne(txt1);
		String txt2 = "전 세계 서킷 중 가장 느리고 가장 좁은 코너, 40~70km/h 속도까지 떨어지며 단 한 대의 차량만이 통과할 수 있습니다.";
		gc.printStringOnebyOne(txt2);
		String txt3 = "스티어링을 끝까지 꺾어야만 돌아나갈 수 있으며, 미세한 오차 하나에도 바리케이드와의 접촉이 불가피합니다.";
		gc.printStringOnebyOne(txt3);
		String txt4 = "이곳에서의 라인 선택은 곧 다음 가속 구간에서의 리듬으로 이어집니다!";
		gc.printStringOnebyOne(txt4);
		System.out.println();
		System.out.println("============================================================================");
		System.out.println();
		System.out.println();
	}
	
	public void printCourse3() {
		System.out.println("============================ Course 3 : Tunnel  ============================");
		System.out.println();
		String txt1 = "평균 속도 280 ~ 290 km/h가 뽑아져 나오는 모나코 그랑프리의 가장 빠른 구간, 터널에 진입합니다!";
		gc.printStringOnebyOne(txt1);
		String txt2 = "좁은 시가지 코스를 달리던 머신들이 이곳에서는 숨을 고르듯 가속 페달을 끝까지 밟아 올리죠.";
		gc.printStringOnebyOne(txt2);
		String txt3 = "어두운 터널 속을 뚫고 나와, 순간적으로 시야가 흔들리지만 드라이버들은 브레이크 포인트를 정확히 잡아야 합니다.";
		gc.printStringOnebyOne(txt3);
		String txt4 = "곧바로 이어지는 누벨 시케인을 앞두고, 이 직선 구간에서 최대한 속도를 끌어올리는 것이 관건입니다!";
		gc.printStringOnebyOne(txt4);
		System.out.println();
		System.out.println("=============================================================================");
		System.out.println();
		System.out.println();
	}
	
	
	public void playShanghai(Driver driver) throws InterruptedException, IOException {
		
		Driver userDriver = CircuitController.pc.getDriverListForGrandPix().get(driver.getDriverNum()-1);
		
		
		introCircuit();
		
		// 스타트 코스
		userDriver.setCurrentSpeed(cc.start()); 
		cc.generateAICurrentSpeeds(userDriver, 300, 900); // AI 드라이버 속도 300~900 사이 지정
		cc.setStartPoint(); // 스타트 포인트 각 드라이버별로 s기록
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		System.out.println(userDriver.getDriverName() + " 선수 "+userDriver.getCircuitRank()+"위로 출발합니다!");
		gc.printLoadingDot();
		System.out.println("치열한 경쟁! " + CircuitController.pc.driverListForGrandPix.get(random.nextInt(4)).getDriverName() + " 선수가 추월에 성공했습니다!");
		gc.printLoadingDot();
		System.out.println(CircuitController.pc.driverListForGrandPix.get(random.nextInt(4)).getDriverName() + " 선수가 좋은 코너링으로 속도를 유지합니다!");
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		// 1번 코스 [Casino Square]
		Course course1 = new Course(1, "Casino Square", 2, 134); // 1-직선 2-곡선 3-유턴
		shanghai.getCourseList().add(course1);
		
	
		printCourse1();
		
		System.out.print("속도를 입력하세요 > ");
		userDriver.setCurrentSpeed(sc.nextInt());
		sc.nextLine();
		cc.generateAICurrentSpeeds(userDriver, 120, 150);
		System.out.println();
		cc.setCurrentPoint(shanghai.getCourseList().get(0).getBestSpeed()); // get(0) > 1번째 코스
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
//		course1.getCourseType();
		
		
		
		// 2번 코스 [Fairmont Hairpin]: 유턴
		Course course2 = new Course(2, "Fairmont Hairpin", 3, 44); // 1-직선 2-곡선 3-유턴
		shanghai.getCourseList().add(course2);
		
		printCourse2();
		
		System.out.print("속도를 입력하세요 > ");
		userDriver.setCurrentSpeed(sc.nextInt());
		sc.nextLine();
		cc.generateAICurrentSpeeds(userDriver, 40, 70);
		System.out.println();
		cc.setCurrentPoint(shanghai.getCourseList().get(1).getBestSpeed()); // get(1) > 2번째 코스
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		// 3번 코스 [Tunnel]
		Course course3 = new Course(3, "Tunnel", 1, 294); // 1-직선 2-곡선 3-유턴
		shanghai.getCourseList().add(course3);
		
		printCourse3();
		
		System.out.print("속도를 입력하세요 > ");
		userDriver.setCurrentSpeed(sc.nextInt());
		sc.nextLine();
		cc.generateAICurrentSpeeds(userDriver, 280, 300);
		System.out.println();
		cc.setCurrentPoint(shanghai.getCourseList().get(2).getBestSpeed()); // get(2) > 3번째 코스
		
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		System.out.println(userDriver.getDriverName() + " 선수 "+userDriver.getCircuitRank()+"위로 들어오고 있습니다!!!!!");
		gc.printLoadingDot();
		System.out.println("정말 멋진 성적이네요, 곧 체크 플레그가 휘날립니다!!");
		gc.printLoadingDot();
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		// 피날레 이미지 출력
		
		dac.printCheckFlag();
		Thread.sleep(500);
		dac.printFireWork();
		Thread.sleep(500);
		dac.printFinish();
		
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		// 순위 공개
		
		System.out.println("======================================================================================");
		System.out.println();
		System.out.println(shanghai.getCircuitLocation()+" 그랑프리가 종료되었습니다.");
		gc.printLoadingDot();
		System.out.println("잠시 후 "+shanghai.getCircuitName()+" 파이널 순위가 공개됩니다.");
		gc.printLoadingDot();
		System.out.println("======================================================================================");
		System.out.println();
		System.out.println();
		System.out.println();
		dac.printGrandPrixStandingImage();
		System.out.println("RANK \t DRIVER \t\t TEAM \t\t\t POINT");
		System.out.println("-------------------------------------------------------------------------------------");
		System.out.println();
		cc.printGrandpixStanding();
		System.out.println();
		System.out.println("=====================================================================================");
		
		
		for(Constructor cs : CircuitController.pc.constructorList) {
			for(Driver d : cs.getDriverList()) {
				cs.setConstructorPoint(cs.getConstructorPoint()+d.getCircuitPoint());  // 컨스트럭터 포인트 누적
			}
		}
		
		
		for(Driver d : CircuitController.pc.driverListForGrandPix) {
			d.setDriverPoint(d.getDriverPoint()+d.getCircuitPoint()); // driverPoint 누적

			// 다음 그랑프리를 위해 그랑프리 값 초기화
			d.setCircuitPoint(0);
			d.setCircuitRank(0);
			d.setCurrentSpeed(0);
			
		}
	}	

}
