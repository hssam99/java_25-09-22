package f1_project;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

public class MonzaController {
	
	CircuitController cc = new CircuitController();
	DotArtController dac = new DotArtController();
	GameController gc = new GameController();
	
	Scanner sc = new Scanner(System.in);
	
	Random random = new Random();
	
	private int circuitIndex;
	public Circuit silverStone;
	
	
	public MonzaController(Driver userDriver, int circuitNum) throws InterruptedException, IOException {
		this.circuitIndex=circuitNum;
		silverStone = cc.getCircuitList().get(circuitIndex);
	}
	
	
	
	public void introCircuit() throws InterruptedException {
		dac.printSilverStoneCircuitImage();
		System.out.print("entering Monza");
		gc.printLoadingDot();

		silverStone.printCircuitInfo();
		gc.printLoadingDot();
		System.out.print("Loading");
		gc.printLoadingDot();
		
		System.out.println("============================GAME START============================");
		System.out.println();
		
		
		String text1 = "안녕하십니까, 오늘은 이탈리아의 심장부에서 열리는 포뮬러 원 몬자 그랑프리에 나와 있습니다.";
		gc.printStringOnebyOne(text1);
		String text2 = "이곳 몬자 서킷은 ‘속도의 성전’으로 불리며, 긴 직선 구간과 빠른 코너로 구성되어 드라이버와";
		gc.printStringOnebyOne(text2);
		String text3 = "머신의 한계를 시험하는 곳이죠. 1950년부터 이어진 전통의 레이스로, 매년 수십만 명의 팬들이";
		gc.printStringOnebyOne(text3);
		String text4 = "현장을 찾는 전 세계적인 명소이기도 합니다";
		gc.printStringOnebyOne(text4);
		System.out.println();
		String text5 = "오늘도 드라이버들은 DRS를 활용하며 최대 속도를 끌어올리고, 한 치의 실수도 허용되지 않는";
		gc.printStringOnebyOne(text5);
		String text6 = "도전적인 코너링을 선보일 예정입니다.";
		gc.printStringOnebyOne(text6);
		System.out.println();
		String text7 = "몬자 특유의 긴 직선과 하이 스피드 코너에서 펼쳐질 뜨거운 레이스, 지금 바로 시작합니다!";
		gc.printStringOnebyOne(text7);
		System.out.println();
		System.out.println("==================================================================");
		System.out.println();
		System.out.println();
	}
	
	
	public void playSilverstone(Driver driver) throws InterruptedException, IOException {
		
		Driver userDriver = CircuitController.pc.getDriverListForGrandPix().get(driver.getDriverNum()-1);
		
		
		introCircuit();
		
		// 스타트 코스
		userDriver.setCurrentSpeed(cc.start()); 
		System.out.println(CircuitController.pc.getDriverListForGrandPix()); /////////////////////디버깅 (정상작동)
		cc.generateAICurrentSpeeds(userDriver, 300, 900); // AI 드라이버 속도 300~900 사이 지정
		System.out.println(CircuitController.pc.getDriverListForGrandPix()); /////////////////////디버깅 (정상작동)
		cc.setStartPoint(); // 스타트 포인트 각 드라이버별로 기록
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		System.out.println(userDriver.getDriverName() + " 선수 "+userDriver.getCircuitRank()+"위로 출발합니다!");
		gc.printLoadingDot();
		System.out.println("치열한 경쟁! " + CircuitController.pc.driverListForGrandPix.get(random.nextInt(4)).getDriverName() + " 선수가 추월에 성공했습니다!");
		gc.printLoadingDot();
		System.out.println(CircuitController.pc.driverListForGrandPix.get(random.nextInt(4)).getDriverName() + " 선수가 좋은 코너링으로 속도를 유지합니다!");
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		// 1번 코스 [copse]
		//public Course(int courseNum, String courseName, int courseType, int bestSpeed)
		Course copse = new Course(1, "copse", 2, 290);
		silverStone.getCourseList().add(copse);
		
		
		System.out.println("======================== Course 1 : COPSE ===========================");
		System.out.println();
		String copse1 = "자, 지금 우리는 실버스톤 서킷의 상징, 첫 번째 도전 구간 코프스(Copse)에 다다랐습니다!";
		gc.printStringOnebyOne(copse1);
		String copse2 = "이 고속 우회전은 레이스 초반부터 드라이버의 용기와 차량의 안정성을 시험하는 곳이죠.";
		gc.printStringOnebyOne(copse2);
		String copse3 = "상당한 속도를 유지할 수 있지만, 안전하게 코너를 빠져나가면서 최적의 라인을 타기 위해선";
		gc.printStringOnebyOne(copse3);
		String copse4 = "적정 스피드가 중요합니다. 270~300 km/h 사이로 접근하면 안정적인 코너링이 가능하죠. ";
		gc.printStringOnebyOne(copse4);
		System.out.println();
		System.out.println("=====================================================================");
		System.out.println();
		System.out.println();
		
		System.out.print("속도를 입력하세요 > ");
		userDriver.setCurrentSpeed(sc.nextInt());
		sc.nextLine();
		cc.generateAICurrentSpeeds(userDriver, 270, 300);
		System.out.println();
		cc.setCurrentPoint(silverStone.getCourseList().get(0).getBestSpeed()); // get(0) > 1번째 코스
		
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		// 2번 코스 [MaggottsBecketts]
		//public Course(int courseNum, String courseName, int courseType, int bestSpeed)
		Course mb = new Course(2, "Maggotts&Becketts", 3, 302);
		silverStone.getCourseList().add(mb);
		
		
		System.out.println("============================ Course 2 : Maggotts & Becketts  ============================");
		System.out.println();
		String mb1 = "이제 실버스톤의 명물, Maggotts & Becketts 구간에 도착했습니다!";
		gc.printStringOnebyOne(mb1);
		String mb2 = "연속으로 이어지는 좌우좌우 고속 S자 코너는 드라이버와 차량의 기량을 동시에 시험하는 최정점 구간이죠.";
		gc.printStringOnebyOne(mb2);
		String mb3 = "한 치의 라인 선택 실수도 허용되지 않으며, 이 구간을 얼마나 매끄럽게 통과하느냐가 랩 타임을 좌우합니다!";
		gc.printStringOnebyOne(mb3);
		String mb4 = "연속 고속 S코너이기 때문에 290~310 km/h 사이로 최대한 안정적으로 한 번에 연결하는 것이 핵심입니다.";
		gc.printStringOnebyOne(mb4);
		System.out.println();
		System.out.println("=========================================================================================");
		System.out.println();
		System.out.println();
		
		System.out.print("속도를 입력하세요 > ");
		userDriver.setCurrentSpeed(sc.nextInt());
		sc.nextLine();
		cc.generateAICurrentSpeeds(userDriver, 290, 310);
		System.out.println();
		cc.setCurrentPoint(silverStone.getCourseList().get(1).getBestSpeed()); // get(1) > 2번째 코스
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		// 3번 코스 [Hangar Straight]
		//public Course(int courseNum, String courseName, int courseType, int bestSpeed)
		Course hs = new Course(3, "HangarStraight", 1, 330); // 1 직선코스
		silverStone.getCourseList().add(hs);
		
		
		System.out.println("============================ Course 3 : Hangar Straight  ============================");
		System.out.println();
		String hs1 = "실버스톤의 마지막 구간, Hangar Straight입니다!";
		gc.printStringOnebyOne(hs1);
		String hs2 = "길게 뻗은 직선 구간에서 드라이버들은 DRS를 활용하며 최대한의 속도를 끌어올리죠.";
		gc.printStringOnebyOne(hs2);
		String hs3 = "관중석에서는 한눈에 펼쳐지는 초고속 추월전이 가장 큰 볼거리입니다.";
		gc.printStringOnebyOne(hs3);
		String hs4 = "눈 깜짝할 사이에 지나가는 320 km/h 이상의 속도를 체험해보세요!";
		gc.printStringOnebyOne(hs4);
		System.out.println();
		System.out.println("======================================================================================");
		System.out.println();
		System.out.println();
		
		System.out.print("속도를 입력하세요 > ");
		userDriver.setCurrentSpeed(sc.nextInt());
		sc.nextLine();
		cc.generateAICurrentSpeeds(userDriver, 320, 360);
		System.out.println();
		cc.setCurrentPoint(silverStone.getCourseList().get(2).getBestSpeed()); // get(2) > 3번째 코스
		
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		System.out.println(userDriver.getDriverName() + " 선수 "+userDriver.getCircuitRank()+"위로 들어오고 있습니다!!!!!");
		gc.printLoadingDot();
		System.out.println("정말 멋진 성적이네요, 곧 체크 플레그가 휘날립니다!!");
		gc.printLoadingDot();
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		// 피날레 이미지 출력
		
		dac.printCheckFlag();
		Thread.sleep(500);
		dac.printFireWork();
		Thread.sleep(500);
		dac.printFinish();
		
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		// 순위 공개
		
		System.out.println("======================================================================================");
		System.out.println();
		System.out.println(silverStone.getCircuitLocation()+" 그랑프리가 종료되었습니다.");
		gc.printLoadingDot();
		System.out.println("잠시 후 "+silverStone.getCircuitName()+" 파이널 순위가 공개됩니다.");
		gc.printLoadingDot();
		System.out.println("======================================================================================");
		System.out.println();
		System.out.println();
		System.out.println();
		dac.printGrandPrixStandingImage();
		System.out.println("RANK \t DRIVER \t\t TEAM \t\t\t POINT");
		System.out.println("-------------------------------------------------------------------------------------");
		System.out.println();
		cc.printGrandpixStanding();
		System.out.println();
		System.out.println("=====================================================================================");
		
		System.out.println(CircuitController.pc.driverListForGrandPix);
		
		// 다음 그랑프리를 위해 그랑프리 값 초기화
		for(Driver d : CircuitController.pc.driverListForGrandPix) {
			d.setCircuitPoint(0);
			d.setCircuitRank(0);
			
		}
		
		
	}

}
