package f1_project;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

public class MonzaController {
	
	CircuitController cc = new CircuitController();
	DotArtController dac = new DotArtController();
	GameController gc = new GameController();
	
	Scanner sc = new Scanner(System.in);
	Random random = new Random();
	
	private int circuitIndex;
	public Circuit monza;
	
	
	public MonzaController(Driver userDriver, int circuitidx) throws InterruptedException, IOException {
		this.circuitIndex=circuitidx;
		monza = cc.getCircuitList().get(circuitIndex);
		cc.setWeather(circuitIndex);
	}
	
	
	
	public void introCircuit() throws InterruptedException {
		dac.printMonzaCircuitImage();
		System.out.print("entering Monza");
		gc.printLoadingDot();

		monza.printCircuitInfo();
		gc.printLoadingDot();
		System.out.print("Loading");
		gc.printLoadingDot();
		
		System.out.println("============================ GAME START ============================");
		System.out.println();
		
		
		String text1 = "안녕하십니까, 오늘은 이탈리아의 심장부에서 열리는 포뮬러 원 몬자 그랑프리에 나와 있습니다.";
		gc.printStringOnebyOne(text1);
		String text2 = "이곳 몬자 서킷은 ‘속도의 성전’으로 불리며, 긴 직선 구간과 빠른 코너로 구성되어 드라이버와";
		gc.printStringOnebyOne(text2);
		String text3 = "머신의 한계를 시험하는 곳이죠. 1950년부터 이어진 전통의 레이스로, 매년 수십만 명의 팬들이";
		gc.printStringOnebyOne(text3);
		String text4 = "현장을 찾는 전 세계적인 명소이기도 합니다";
		gc.printStringOnebyOne(text4);
		System.out.println();
		String text5 = "오늘도 드라이버들은 DRS를 활용하며 최대 속도를 끌어올리고, 한 치의 실수도 허용되지 않는";
		gc.printStringOnebyOne(text5);
		String text6 = "도전적인 코너링을 선보일 예정입니다.";
		gc.printStringOnebyOne(text6);
		System.out.println();
		String text7 = "몬자 특유의 긴 직선과 하이 스피드 코너에서 펼쳐질 뜨거운 레이스, 지금 바로 시작합니다!";
		gc.printStringOnebyOne(text7);
		System.out.println();
		System.out.println("===================================================================");
		System.out.println();
		System.out.println();
	}
	
	
	public void printCourse1() {
		System.out.println("======================== Course 1 : Rettifilo ===========================");
		System.out.println();
		String txt1 = "자, 이제 몬자 서킷의 상징적인 출발 직선, Rettifilo Tribune에 들어섰습니다!";
		gc.printStringOnebyOne(txt1);
		String txt2 = "드라이버들은 최대 속도를 뽑아내며 초반 순위를 다투게 되는데요.";
		gc.printStringOnebyOne(txt2);
		String txt3 = "330~360 km/h 정도로 안정적인 출발을 하면 최고의 랩 타임을 노릴 수 있습니다";
		gc.printStringOnebyOne(txt3);
		System.out.println();
		System.out.println("=====================================================================");
		System.out.println();
		System.out.println();
	}
	
	public void printCourse2() {
		System.out.println("============================ Course 2 : Lesmo  ============================");
		System.out.println();
		String txt1 = "이제 Lesmo 코너, 연속 우회전 1번과 2번을 만납니다.";
		gc.printStringOnebyOne(txt1);
		String txt2 = "고속에서 균형을 유지하며 라인을 정확히 타야 하는 기술적 구간입니다.";
		gc.printStringOnebyOne(txt2);
		String txt3 = "150~180 km/h로 접근하면 랩 타임 손실을 최소화할 수 있죠.";
		gc.printStringOnebyOne(txt3);
		System.out.println();
		System.out.println("============================================================================");
		System.out.println();
		System.out.println();
	}
	
	public void printCourse3() {
		System.out.println("============================ Course 3 : Parabolica  ============================");
		System.out.println();
		String txt1 = "마지막 코너, Parabolica에 진입합니다!";
		gc.printStringOnebyOne(txt1);
		String txt2 = "길고 완만한 우회전이지만, 마지막 직선으로 연결되는 구간이므로 속도 유지가 핵심입니다.";
		gc.printStringOnebyOne(txt2);
		String txt3 = "250~280 km/h 정도로 안정적으로 코너를 빠져나가면 체크 플래그 직전에 최적의 랩 타임을 확보할 수 있습니다.";
		gc.printStringOnebyOne(txt3);
		System.out.println();
		System.out.println("======================================================================================");
		System.out.println();
		System.out.println();
	}
	
	
	public void playMonza(Driver driver) throws InterruptedException, IOException {
		
		Driver userDriver = CircuitController.pc.getDriverListForGrandPix().get(driver.getDriverNum()-1);
		introCircuit();
		
		
		
		// 비가 오면 비올 때 잘 달리는 선수에게 가산점 부여
	    if(monza.getCurrentWeather()==1) { // 비가 오면
	    	for(Driver d :CircuitController.pc.getDriverListForGrandPix()) {
	    		
	    		//비가 오는 날에 강한 선수타입이라면 
	    		if(d.getWeatherType()==1) {
//	    			System.out.println(d.getDriverName() + " 선수는 비 오는 날씨에 강한 선수입니다. +3점 가산점 부여!");/////////////////////디버깅 (정상작동)
	    			d.setCircuitPoint(d.getCircuitPoint() + 3);
	    		}
	    	}
	    }
	    
	    
	    String txt1 = "[TEAM RADIO] : "+userDriver.getDriverName()+" 오늘 날씨를 참고해서 어떤 타이어가 좋을지 선택해줘.";
	    gc.printStringOnebyOne(txt1);
	    userDriver.setTire(cc.setUserTire(userDriver)); // user 타이어 지정
	    cc.generateAiTire(userDriver); // AI 드라이버 타이어 지정
	    

	    System.out.println();
	    System.out.println();
	    
	    String txt2 = "[TEAM RADIO] : OK! "+userDriver.getDriverName()+" 오늘 경기도 힘내 보자구!!";
	    gc.printStringOnebyOne(txt2);
	    
	    System.out.println();
	    System.out.println();
	    
	    
		int startTime=cc.start(); // 너무 빨리 눌러서 부정출발하면 -1 리턴
		
		// 부정출발 했을 경우
		if(startTime==-1) {
			userDriver.setPenalty(userDriver.getPenalty()+1); // 패널티 1 추가 > 추후 마지막에 패널티*5 해서 circuitPoint 감점처리
			startTime = 905; // 꼴찌로 출발하도록 출발시간 강제 변경
		}
		
		// 스타트 코스
		userDriver.setCurrentSpeed(startTime); 
		cc.generateAICurrentSpeeds(userDriver, 300, 900); // AI 드라이버 속도 300~900 사이 지정
		cc.setStartPoint(); // 스타트 포인트 각 드라이버별로 기록
		
		
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		System.out.println("PRESS [ENTER] TO CONTINUE");
		sc.nextLine();
		
		
		// 중간 메시지
		gc.printRandomMessagesAfterCourse(0); // start courseType 0
		
		
		
		// 1번 코스 [copse]
		//public Course(int courseNum, String courseName, int courseType, int bestSpeed)
		Course course1 = new Course(1, "copse", 2, 290);
		monza.getCourseList().add(course1);
		
		printCourse1();
		
		System.out.print("속도를 입력하세요 > ");
		userDriver.setCurrentSpeed(sc.nextInt());
		sc.nextLine();
		cc.generateAICurrentSpeeds(userDriver, 270, 300);
		System.out.println();
		cc.setCurrentPoint(monza.getCourseList().get(0).getBestSpeed()); // get(0) > 1번째 코스
		
		
//		System.out.println(CircuitController.pc.getDriverListForGrandPix()); /////////////////////디버깅 (정상작동)
		
		
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		System.out.println("PRESS [ENTER] TO CONTINUE");
		sc.nextLine();
		
		
		// 중간 메시지
		gc.printRandomMessagesAfterCourse(course1.getCourseType());
		
		
		
		
		/// 날씨 체인저 
		
		
		System.out.println("갑자기 날씨가 변합니다...");
		// 현재 날씨 상태 저장
	    boolean prevRaining = cc.isRaining();
//	    System.out.println("디버깅 prevRaining:"+prevRaining); /////////// 디버깅
	    // 날씨 결정 다시 (날씨 상태 반전)
	    cc.setRaining(!prevRaining);
	    monza.setCurrentWeather(!prevRaining?1:0);

	    System.out.println(cc.isRaining() ? "비가 내리기 시작합니다. 오늘 경기 반전이 일어날까요?" :
	    	"아 드디어 구름이 걷히고 해가 나기 시작합니다. 비가 멈췄어요! 경기 양상이 빠르게 달라질 것 같습니다!");
	    System.out.println();
	    System.out.println();
	    System.out.println();
	    Thread.sleep(500);
	    
//	    System.out.println("디버깅 silverStone.getCurrentWeather():"+silverStone.getCurrentWeather()); /////////// 디버깅
	    
	    if(monza.getCurrentWeather()==1) { // 비가 오면
	    	for(Driver d :CircuitController.pc.getDriverListForGrandPix()) {
	    		//비가 오는 날에 강한 선수타입이라면 
	    		if(d.getWeatherType()==1) {
//	    			System.out.println("디버깅"+d.getDriverName() + " 선수는 비 오는 날씨에 강한 선수입니다. +3점 가산점 부여!"); /////////////////////디버깅 (정상작동)
	    			d.setCircuitPoint(d.getCircuitPoint() + 3);
	    		}
	    	}
	    }
	    
//		System.out.println("디버깅:"+CircuitController.pc.getDriverListForGrandPix()); /////////////////////디버깅 (정상작동)
	    
	    String text1 = "[TEAM RADIO] : Box Box...";
	    gc.printStringOnebyOne(text1);
	    String text2 = "[TEAM RADIO] : "+userDriver.getDriverName()+" 날씨가 달라졌어. 타이어를 교체해야 될 거 같아.";
	    gc.printStringOnebyOne(text2);
	    System.out.println("타이어를 교체하시겠습니까? [1]Yes  [2]No");
	    int userChoice = gc.YesOrNo(sc);
	    if(userChoice==1) {
	    	userDriver.setTire(cc.setUserTire(userDriver)); // user 타이어 지정
	    }
	    cc.generateAiTire(userDriver); // AI 드라이버 타이어 재지정
	    
//	    System.out.println("디버깅: ///////// 현재 나의 타이어:"+userDriver.getTire());  /////////////////////디버깅 (정상작동)
	    
//		System.out.println("디버깅:"+CircuitController.pc.getDriverListForGrandPix()); /////////////////////디버깅 (정상작동)
	    
	    
		System.out.println("PRESS [ENTER] TO CONTINUE");
		sc.nextLine();
		sc.nextLine();
		
		
		
		// 2번 코스 [MaggottsBecketts]
		//public Course(int courseNum, String courseName, int courseType, int bestSpeed)
		Course course2 = new Course(2, "Maggotts&Becketts", 3, 302);
		monza.getCourseList().add(course2);
		
		printCourse2();
		
		System.out.print("속도를 입력하세요 > ");
		userDriver.setCurrentSpeed(sc.nextInt());
		sc.nextLine();
		cc.generateAICurrentSpeeds(userDriver, 290, 310);
		System.out.println();
		cc.setCurrentPoint(monza.getCourseList().get(1).getBestSpeed()); // get(1) > 2번째 코스
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		System.out.println("PRESS [ENTER] TO CONTINUE");
		sc.nextLine();
		
		// 중간 메시지
		gc.printRandomMessagesAfterCourse(course2.getCourseType());
		
		
		
		
		
		
		
		
		// 3번 코스 [Hangar Straight]
		//public Course(int courseNum, String courseName, int courseType, int bestSpeed)
		Course course3 = new Course(3, "HangarStraight", 1, 330); // 1 직선코스
		monza.getCourseList().add(course3);
		
		
		printCourse3();
		
		System.out.print("속도를 입력하세요 > ");
		userDriver.setCurrentSpeed(sc.nextInt());
		sc.nextLine();
		cc.generateAICurrentSpeeds(userDriver, 320, 360);
		System.out.println();
		cc.setCurrentPoint(monza.getCourseList().get(2).getBestSpeed()); // get(2) > 3번째 코스
		
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		
		System.out.println("PRESS [ENTER] TO CONTINUE");
		sc.nextLine();
		
		
		// 중간 메시지
		gc.printRandomMessagesAfterCourse(course3.getCourseType());
		
		
		
		
		// 피날레
		
		
		System.out.println(userDriver.getDriverName() + " 선수 "+userDriver.getCircuitRank()+"위로 들어오고 있습니다!!!!!");
		gc.printLoadingDot();
		System.out.println();
		System.out.println("정말 멋진 성적이네요, 곧 체크 플레그가 휘날립니다!!");
		gc.printLoadingDot();
		System.out.println();
		
		// 피날레 메시지
		gc.printRandomMessagesAfterCourse(4);
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		// 피날레 이미지 출력
		
		dac.printCheckFlag();
		Thread.sleep(500);
		dac.printFireWork();
		Thread.sleep(500);
		dac.printFinish();
		
		
		Thread.sleep(1000);
		System.out.println();
		System.out.println();
		
		
		System.out.println("디버깅"+CircuitController.pc.driverListForGrandPix); /////// ///// ///// ///// ///// /// 디버깅
		
		
		
		for(Driver d:CircuitController.pc.getDriverListForGrandPix()) {
			if(d.getPenalty()>0) {
				
				int tmp = d.getCircuitPoint()-(d.getPenalty()*5); // 패널티 숫자만큼 -5
				if(tmp<0) {
					tmp = 0; // circuitPoint가 패널티 점수보다 낮아 포인트가 음수가 될 경우 0으로 초기화
				}
				
				d.setCircuitPoint(tmp);
				System.out.println("패널티 실행!");
			}
		}
		
		System.out.println("디버깅"+CircuitController.pc.driverListForGrandPix); /////// ///// ///// ///// ///// /// 디버깅
		
		
		// 순위 공개
		
		System.out.println("======================================================================================");
		System.out.println();
		System.out.println(monza.getCircuitLocation()+" 그랑프리가 종료되었습니다.");
		gc.printLoadingDot();
		System.out.println("잠시 후 "+monza.getCircuitName()+" 파이널 순위가 공개됩니다.");
		gc.printLoadingDot();
		System.out.println("======================================================================================");
		System.out.println();
		System.out.println();
		System.out.println();
		dac.printGrandPrixStandingImage();
		System.out.println("RANK \t DRIVER \t\t TEAM \t\t\t POINT");
		System.out.println("-------------------------------------------------------------------------------------");
		System.out.println();
		cc.printGrandpixStanding();
		System.out.println();
		System.out.println("=====================================================================================");
		
//		System.out.println(CircuitController.pc.driverListForGrandPix); /////// ///// ///// ///// ///// /// 디버깅
		
		for(Constructor cs : CircuitController.pc.constructorList) {
			for(Driver d : cs.getDriverList()) {
				cs.setConstructorPoint(cs.getConstructorPoint()+d.getCircuitPoint());  // 컨스트럭터 포인트 누적
//				System.out.println(cs.getConstructorName()+"의 챔피언쉽 포인트: "+cs.getConstructorPoint()); /////// ///// ///// ///// ///// /// 디버깅
			}
		} // for 문 
		
		
		for(Driver d : CircuitController.pc.driverListForGrandPix) {
			d.setDriverPoint(d.getDriverPoint()+d.getCircuitPoint()); // driverPoint 누적

			// 다음 그랑프리를 위해 그랑프리 값 초기화
			d.setCircuitPoint(0);
			d.setCircuitRank(0);
			d.setCurrentSpeed(0);
			d.setPenalty(0);
			d.setTire(0);
			
		} // for 문 
		gc.printChampionshipConstructor();
//		System.out.println(CircuitController.pc.driverListForGrandPix); /////// ///// ///// ///// ///// /// 디버깅
		
		
		
		System.out.println(monza.getCircuitName()+" 그랑프리 플레이가 종료되었습니다.");
		System.out.print("그랑프리 맵으로 돌아갑니다");
		gc.printLoadingDot();
		System.out.print("Loading");
		gc.printLoadingDot();
		Thread.sleep(1000);
		
		
	}

}
